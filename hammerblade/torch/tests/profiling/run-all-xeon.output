{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

total number of jobs: 3
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_00
ln -s ../test.py test_kernel_000_xeon_00/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_01
ln -s ../test.py test_kernel_000_xeon_01/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_02
ln -s ../test.py test_kernel_000_xeon_02/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_03
ln -s ../test.py test_kernel_000_xeon_03/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_04
ln -s ../test.py test_kernel_000_xeon_04/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_05
ln -s ../test.py test_kernel_000_xeon_05/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_06
ln -s ../test.py test_kernel_000_xeon_06/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_07
ln -s ../test.py test_kernel_000_xeon_07/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_08
ln -s ../test.py test_kernel_000_xeon_08/test.py
starting cosim job ...
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_000_xeon_09
ln -s ../test.py test_kernel_000_xeon_09/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_00
ln -s ../test.py test_kernel_001_xeon_00/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_01
ln -s ../test.py test_kernel_001_xeon_01/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_02
ln -s ../test.py test_kernel_001_xeon_02/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_03
ln -s ../test.py test_kernel_001_xeon_03/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_04
ln -s ../test.py test_kernel_001_xeon_04/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_05
ln -s ../test.py test_kernel_001_xeon_05/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_06
ln -s ../test.py test_kernel_001_xeon_06/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_07
ln -s ../test.py test_kernel_001_xeon_07/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_08
ln -s ../test.py test_kernel_001_xeon_08/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_001_xeon_09
ln -s ../test.py test_kernel_001_xeon_09/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_00
ln -s ../test.py test_kernel_002_xeon_00/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_01
ln -s ../test.py test_kernel_002_xeon_01/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_02
ln -s ../test.py test_kernel_002_xeon_02/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_03
ln -s ../test.py test_kernel_002_xeon_03/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_04
ln -s ../test.py test_kernel_002_xeon_04/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_05
ln -s ../test.py test_kernel_002_xeon_05/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_06
ln -s ../test.py test_kernel_002_xeon_06/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_07
ln -s ../test.py test_kernel_002_xeon_07/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_08
ln -s ../test.py test_kernel_002_xeon_08/test.py
starting cosim job ...
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}
{'offload': False, 'signature': 'at::Tensor at::CPUType::{anonymous}::mul(const at::Tensor&, const at::Tensor&)'}
{'offload': True, 'signature': 'at::Tensor at::CPUType::{anonymous}::add(const at::Tensor&, const at::Tensor&, c10::Scalar)'}

mkdir -p test_kernel_002_xeon_09
ln -s ../test.py test_kernel_002_xeon_09/test.py
starting cosim job ...
